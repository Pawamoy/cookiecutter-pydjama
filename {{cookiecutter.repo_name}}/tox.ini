{%- if cookiecutter.django|lower == "yes" -%}

[tox]
envlist =
    clean,
    check,{% if '1.8' in cookiecutter.django_versions %}
    {py27,py34,py35}-django-18,{% endif %}{% if '1.9' in cookiecutter.django_versions %}
    {py27,py34,py35}-django-19,{% endif %}{% if '1.10' in cookiecutter.django_versions %}
    {py27,py34,py35}-django-110,{% endif %}{% if 'master' in cookiecutter.django_versions %}
    {py27,py34,py35}-django-master,{% endif %}
    report,
    docs
skipsdist = True
skip_missing_interpreters = true

[testenv]
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/src:{toxinidir}/tests
    PYTHONUNBUFFERED=yes
commands = {posargs:pytest --cov --cov-report=term-missing -vv runtests.py tests}
deps ={% if '1.8' in cookiecutter.django_versions %}
    django-18: Django>=1.8,<1.9{% endif %}{% if '1.9' in cookiecutter.django_versions %}
    django-19: Django>=1.9,<1.10{% endif %}{% if '1.10' in cookiecutter.django_versions %}
    django-110: Django>=1.10{% endif %}{% if 'master' in cookiecutter.django_versions %}
    django-master: https://github.com/django/django/archive/master.tar.gz{% endif %}
    -r{toxinidir}/requirements/test.txt
passenv = *
usedevelop = false
basepython =
    pypy: {env:TOXPYTHON:pypy}
    py27: {env:TOXPYTHON:python2.7}
    py33: {env:TOXPYTHON:python3.3}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    {docs,detox,spell}: python2.7
    {clean,check,report,codecov,coveralls}: python3.5


[testenv:detox]
deps = detox
commands =
    detox -e clean,check,docs,{% if '1.8' in cookiecutter.django_versions -%}
    py27-django-18,py34-django-18,py35-django-18,{% endif %}{% if '1.9' in cookiecutter.django_versions -%}
    py27-django-19,py34-django-19,py35-django-19,{% endif %}{% if '1.10' in cookiecutter.django_versions -%}
    py27-django-110,py34-django-110,py35-django-110,{% endif %}{% if 'master' in cookiecutter.django_versions -%}
    py27-django-master,py34-django-master,py35-django-master,{% endif %}
    tox -e report

{%- else %}

[tox]
envlist =
    clean,
    check,
    {py27,py33,py34,py35,pypy},
    report,
    docs
skip_missing_interpreters = true

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
commands = {posargs:pytest --cov --cov-report=term-missing -vv tests}
deps = -r{toxinidir}/requirements/test.txt
passenv = *
usedevelop = false
basepython =
    pypy: {env:TOXPYTHON:pypy}
    py27: {env:TOXPYTHON:python2.7}
    py33: {env:TOXPYTHON:python3.3}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    {docs,detox,spell}: python2.7
    {clean,check,report,codecov,coveralls}: python3.5

[testenv:detox]
deps = detox
commands =
    detox -e clean,check,py27,py33,py34,py35,pypy
    tox -e report

{%- endif %}

[testenv:spell]
setenv = SPELLCHECK=1
commands = sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps = -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
    prospector
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --check-only --diff --recursive src tests setup.py
    prospector -0 {toxinidir}

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

{% if cookiecutter.coveralls|lower == "yes" -%}
[testenv:coveralls]
deps = coveralls
skip_install = true
commands =
    coverage combine --append
    coverage report
    coveralls []
{%- endif %}

{% if cookiecutter.codecov|lower == "yes" -%}
[testenv:codecov]
deps = codecov
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage xml --ignore-errors
    codecov []
{%- endif %}
