[tox]
envlist =
    clean,check,docs,
    {% for py in ["2.6", "2.7", "3.2", "3.3", "3.4", "3.5", "3.5-dev", "3.6", "3.6-dev", "3.7-dev"] %}
      {% if py in cookiecutter.python_versions.split(',') %}
        {% if cookiecutter.django|lower == "yes" %}
          {% for dj in cookiecutter.django_versions.split(',') %}
    py{{ py|replace(".", "") }}-django{{ dj|replace(".", "") }},
          {% endfor %}
        {% else %}
    py{{ py|replace(".", "") }},
        {% endif %}
      {% endif %}
    {% endfor %}
    {% if "pypy" in cookiecutter.python_versions.split(',') %}
      {% if cookiecutter.django|lower == "yes" %}
        {% for dj in cookiecutter.django_versions.split(',') %}
    pypy-django{{ dj|replace(".", "") }},
        {% endfor %}
      {% else %}
    pypy,
      {% endif %}
    {% endif %}
    report
skip_missing_interpreters = true
whitelist_externals = tox

[testenv]
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/src:{toxinidir}/tests
    PYTHONUNBUFFERED=yes
commands = {posargs:pytest --cov --cov-report=term-missing -vv {% if cookiecutter.django|lower == "yes" %}runtests.py{% endif %} tests}
deps =
    {% if cookiecutter.django|lower == "yes" %}
    {% if '1.8' in cookiecutter.django_versions %}django18: Django>=1.8,<1.9{% endif %}
    {% if '1.9' in cookiecutter.django_versions %}django19: Django>=1.9,<1.10{% endif %}
    {% if '1.10' in cookiecutter.django_versions %}django110: Django>=1.10,<1.11{% endif %}
    {% endif %}
    -r{toxinidir}/requirements/test.txt
passenv = *
usedevelop = false

[testenv:detox]
deps = detox
skip_install = true
commands =
    detox -e clean,checksetup,checksafety,checkstyle,checkspell,checklink,docs,
    {%- for py in ["2.6", "2.7", "3.2", "3.3", "3.4", "3.5", "3.5-dev", "3.6", "3.6-dev", "3.7-dev"] -%}
      {%- if py in cookiecutter.python_versions.split(',') -%}
        {%- if cookiecutter.django|lower == "yes" -%}
          {%- for dj in cookiecutter.django_versions.split(',') -%}py{{ py|replace(".", "") }}-django{{ dj|replace(".", "") }},{% endfor -%}
        {%- else -%}py{{ py|replace(".", "") }},{%- endif -%}
      {%- endif -%}
    {%- endfor -%}
    {%- if "pypy" in cookiecutter.python_versions.split(',') -%}
      {%- if cookiecutter.django|lower == "yes" -%}
        {%- for dj in cookiecutter.django_versions.split(',') -%}pypy-django{{ dj|replace(".", "") }},{%- endfor -%}
      {%- else -%}pypy,{%- endif -%}
    {%- endif %}
    tox -e report

[testenv:docs]
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands = sphinx-build {posargs:-E} -b html docs dist/docs

[testenv:check]
skip_install = true
commands = tox -e checksetup,checksafety,checkstyle,checkspell,checklink

[testenv:detoxcheck]
skip_install = true
deps = detox
commands = detox -e checksetup,checksafety,checkstyle,checkspell,checklink

[testenv:checksetup]
skip_install = true
deps =
    docutils
    check-manifest
    readme-renderer
    pygments
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}

[testenv:checksafety]
skip_install = true
deps =
    bandit
    safety
commands =
    safety check -r {toxinidir}/requirements/base.txt
    bandit -r {toxinidir}/src/

[testenv:checkstyle]
skip_install = true
deps =
    isort
    prospector
commands =
    isort --check-only --diff --recursive src tests setup.py
    prospector {toxinidir}

[testenv:checkspell]
skip_install = true
setenv = SPELLCHECK=1
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant
commands =
    - sphinx-build {posargs:-E} -Q -b html docs dist/docs
    sphinx-build -b spelling -w /dev/null docs dist/docs

[testenv:checklink]
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands =
    - sphinx-build {posargs:-E} -Q -b html docs dist/docs
    sphinx-build -b linkcheck -w /dev/null docs dist/docs

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

{% if cookiecutter.coveralls|lower == "yes" -%}
[testenv:coveralls]
deps = coveralls
skip_install = true
commands =
    coverage combine --append
    coverage report
    coveralls []
{%- endif %}

{% if cookiecutter.codecov|lower == "yes" -%}
[testenv:codecov]
deps = codecov
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage xml --ignore-errors
    codecov []
{%- endif %}

{% if cookiecutter.codacy|lower == "yes" -%}
[testenv:codacy]
deps =
    codacy-coverage
    coverage
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage xml --ignore-errors
    python-codacy-coverage []
{%- endif %}
